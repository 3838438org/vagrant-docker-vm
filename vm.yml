---
# +++++++++++++++++++++++++++++++++++++++++++++++ #
#       Vagrant VM Configuration                  #
# +++++++++++++++++++++++++++++++++++++++++++++++ #

###################
# VM settings
###################
VM:
  # Name of VM
  name: 'DEV-VM'

  # Base image
  # You can use nearly any Ubuntu 14.04 vagrant base image.
  # This VM is tested with box-cutter and webdevops image.
  #
  # box-cutter is a plain Ubuntu image and webdevops image is a
  # prebuilt one with all tools preinstalled (faster provisioning)
  #
  # Images:
  # -> webdevops/ubuntu-docker
  # -> box-cutter/ubuntu1404-docker
  #
  image: 'webdevops/ubuntu-docker'

  # Enable GUI mode
  gui: false

  # ---------------------------------------------
  # Resource settings
  #
  # cpu:
  #   auto -> max number of CPU cores
  #      2 -> 2 CPU cores
  #
  # memory:
  #   auto -> 1/4 of system RAM
  #   1500 -> 1.5 GB RAM
  #
  cpu:    'auto'
  memory: 'auto'

  # ---------------------------------------------
  # Data image (additonal partition) settings
  #
  data:
    # Image size in GB
    size: 160

    # Filesystem of image
    # -> ext4, btrfs or xfs
    filesystem: 'ext4'

  # ---------------------------------------------
  # Network settings
  #
  network:
    # Private/Host-only network
    private:
      address: 192.168.56.2

    # Public network
    #  |WARNING| This can be a big security issue and an attacker could
    #  |WARNING| gain access also to host (because of shares or services)!
    #  |WARNING| Only use if you're sure about the risks!
    #  |WARNING| If you need access to services use the port forwarding features!
    public:
      # Address
      #  false -> disabled
      #  auto  -> auto configuration (dhcp)
      address: 'auto'

  # ---------------------------------------------
  # Shared folders
  #
  sharedFolder:
    - { type: 'home' }
    #- { type: 'nfs', src: '~/Projects', target: '/var/www' }

  # ---------------------------------------------
  # Workarounds
  #
  workaround:
    # Fallback ssh connection (https://github.com/mitchellh/vagrant/issues/5186)
    # -> Authentication issues? Workaround:
    useSshPasswordAuth: false

  # ---------------------------------------------
  # VirtualBox settings
  #
  virtualbox:
    # Disk image controller, may change between images, eg.
    # You sometimes have to switch controller if the image is using another one.
    # See VM settings in VirtualBox for the correct naming.
    #
    #  -> 'IDE Controller'
    #  -> 'SATA Controller'
    diskController: 'IDE Controller'

###################
# User/Profile info
###################
PROFILE:
  ## git informations
  email:    'user@example.com'
  realname: 'FULL NAME'

  ## default shell
  shell:    '/bin/zsh'

  ## zsh shell layout [grml,prezto,ohmyzsh]
  zshShell: 'grml'

  ## automatic ssh key fetching from github
  #githubUser: 'example'


###################
# Provisioning features
###################
PROVISION:
  update:      0      # do full system update for each full provisoning (currently not stable for vmware!)
  packages:    'full' # full or minimal
  samba:       1      # Samba server
  ntp:         1      # Time synchronization
  mail:        1      # Mail sandbox
  php:         1      # Local PHP
  docker:      1      # Docker server
  dockerProxy: 1      # Docker reverse proxy for containers (apache)
  clitools:    1      # CliTools

  ## Development domain (automatic redirect of *.vm for internal use)
  developmentDomain: 'vm'

  ## Additional docker opts
  ##  -> if you use btrfs you can set: -s btrfs
  dockerOpts: ''

###################
# Packages
###################
PACKAGES:

  # Custom GNU/Linux kernel version (need reboot after provisioning)
  #
  # Examples:
  #   default kernel   -> 0 or ''
  #   specific version -> 3.19.0-25-generic
  #   recent kernel    -> recent
  #
  # -- WARNING: use with caution - maybe not stable --
  kernel:        ''

  # docker-compose version
  dockerCompose: '1.4.0'

###################
# Clitools settings
###################
CLITOOLS:
  ## Password for growl server
  growlPassword: ''
  db:
    dsn:      'mysql:host=127.0.0.1;port=13306'
    username: 'root'
    password: 'dev'
  docker:
    boilerplate: 'https://github.com/mblaschke/php-docker-boilerplate.git'

###################
# Firewall settings
###################
FIREWALL:

  # Network bridge firewall
  bridge:

    # Interface of bridge
    interface: eth2

    # List of allowed ports
    ports:
      # list of ports
      # required fields: port, protocol
      # optional fields: source
      #- { port: 22, protocol: tcp, source: '10.0.0.0/8' } # SSH
      - { port: 80, protocol: tcp }  # HTTP
      - { port: 443, protocol: tcp } # HTTPS
      #- { port: 143, protocol: tcp } # IMAP

